[{"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\index.js":"1","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\App.js":"2","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\Header.js":"3","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactDetail.js":"4","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactList.js":"5","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\AddContact.js":"6","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactCard.js":"7","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\api\\contacts.js":"8","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\EditContact.js":"9"},{"size":208,"mtime":1611597006000,"results":"10","hashOfConfig":"11"},{"size":2763,"mtime":1667462127861,"results":"12","hashOfConfig":"11"},{"size":276,"mtime":1667452088166,"results":"13","hashOfConfig":"11"},{"size":944,"mtime":1667386090234,"results":"14","hashOfConfig":"11"},{"size":756,"mtime":1611597006000,"results":"15","hashOfConfig":"11"},{"size":2487,"mtime":1667459781767,"results":"16","hashOfConfig":"11"},{"size":998,"mtime":1667473783948,"results":"17","hashOfConfig":"11"},{"size":103,"mtime":1667459172004,"results":"18","hashOfConfig":"11"},{"size":2715,"mtime":1667462271592,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"dgjtvp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\index.js",[],["41","42"],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\App.js",["43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/contacts\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\nfunction App() {\n  // const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n\n  //Retrieve contacts\nconst retrieveContacts = async() =>{\n  const response =await api.get(\"/contacts\")\n  return response.data;\n}\n\n\n  const addContactHandler = async(contact) => {\n    console.log(contact);\n    const request ={\n      id:uuid(),\n      ...contact\n    }\n    const response =await api.post(\"/contacts\",request)\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async(contact)=>{\n        const response = await api.put(`/contacts/${contact.id}`,contact);\n        const {id,name,email,gender} = response.data;\n        setContacts(contacts.map((contact)=>{\n          return contact.id === id?{...response.data}: contact;\n        }))\n  };\n\n  const removeContactHandler = async(id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n\n    const getAllContacts = async() =>{\n      const allContacts = await retrieveContacts();\n      if(allContacts) setContacts(allContacts);\n    };\n    getAllContacts()\n\n  }, []);\n\n  useEffect(() => {\n    // localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={contacts}\n                getContactId={removeContactHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContact {...props} updateContactHandler={updateContactHandler} />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\Header.js",[],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactDetail.js",["46","47","48","49","50","51"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport user from \"../images/user1.jpg\";\nimport female from \"../images/female.jpg\"\n\nconst ContactDetail = (props) => {\n  const { name, email ,gender} = props.location.state.contact;\n  console.log(gender);\n  return (\n    <div className=\"main\">\n      <div className=\"ui card centered\">\n        <div className=\"image\">\n        {\n          gender=== \"Male\" && <img src={user} value={gender}/> || gender===\"Female\" && <img src={female} value={gender}/>\n        }\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">{name}</div>\n          <div className=\"description\">{email}</div>\n        </div>\n      </div>\n      <div className=\"center-div\">\n        <Link to=\"/\">\n          <button className=\"ui button blue center\">\n            Back to Contact List\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactDetail;\n","C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactList.js",[],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\AddContact.js",[],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\ContactCard.js",[],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\api\\contacts.js",[],"C:\\Users\\UPENDRA\\Desktop\\Reactjs\\contact-manager-with-crud\\contact-manager\\src\\components\\EditContact.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":34,"column":19,"nodeType":"58","messageId":"59","endLine":34,"endColumn":23},{"ruleId":"56","severity":1,"message":"60","line":34,"column":24,"nodeType":"58","messageId":"59","endLine":34,"endColumn":29},{"ruleId":"56","severity":1,"message":"61","line":34,"column":30,"nodeType":"58","messageId":"59","endLine":34,"endColumn":36},{"ruleId":"62","severity":1,"message":"63","line":14,"column":28,"nodeType":"64","messageId":"65","endLine":14,"endColumn":30},{"ruleId":"66","severity":1,"message":"67","line":14,"column":31,"nodeType":"68","endLine":14,"endColumn":63},{"ruleId":"62","severity":1,"message":"63","line":14,"column":64,"nodeType":"64","messageId":"65","endLine":14,"endColumn":66},{"ruleId":"62","severity":1,"message":"69","line":14,"column":64,"nodeType":"64","messageId":"65","endLine":14,"endColumn":66},{"ruleId":"62","severity":1,"message":"69","line":14,"column":85,"nodeType":"64","messageId":"65","endLine":14,"endColumn":87},{"ruleId":"66","severity":1,"message":"67","line":14,"column":88,"nodeType":"68","endLine":14,"endColumn":122},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'gender' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation"]